library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_arith.all;
use IEEE.std_logic_unsigned.all;
entity display is 
port (
        a, b, c, d, e, f, g : out std_logic;		-- S
        x3, x2, x1, x0 : in std_logic
    );
end entity;
architecture RTL of display is 
begin

-- Decodificamos..
    process (x3, x2, x1, x0)
        variable auxVectOut : std_logic_vector (6 downto 0);
        variable auxVectIn : std_logic_vector (3 downto 0);
    begin

        -- Cargamos entradas al vector auxiliar.
        auxVectIn(3) := x3;
        auxVectIn(2) := x2;
        auxVectIn(1) := x1;
        auxVectIn(0) := x0;

        if auxVectIn = "0000" then auxVectOut :=  "0000001"; -- 0 -- --"1111110";
        elsif auxVectIn = "0001" then auxVectOut := "1001111"; -- 1 -- 0110000
        elsif auxVectIn = "0010" then auxVectOut := "0010010"; -- 2 -- ""; --1101101
        elsif auxVectIn = "0011" then auxVectOut := "0000110"; -- 3 -- ""; 1111001
        elsif auxVectIn = "0100" then auxVectOut := "1001100"; -- 4 -- ""; 0110011
        elsif auxVectIn = "0101" then auxVectOut := "0100100"; -- 5 -- ""; 1011011
        elsif auxVectIn = "0110" then auxVectOut := "0100000"; -- 6 -- ""; 1011111
        elsif auxVectIn = "0111" then auxVectOut := "0001111"; -- 7 -- ""; 1110000
        elsif auxVectIn = "1000" then auxVectOut := "0000000"; -- 8 -- ""; 1111111
        elsif auxVectIn = "1001" then auxVectOut := "0000100"; -- 9 -- ""; 1110011
        else auxVectOut := "UUUUUUU";
        end if;

        -- Cargamos salidas al vector auxiliar.
        a <= auxVectOut(6);
        b <= auxVectOut(5);
        c <= auxVectOut(4);
        d <= auxVectOut(3);
        e <= auxVectOut(2);
        f <= auxVectOut(1);
        g <= auxVectOut(0);

    end process;

end RTL; 
